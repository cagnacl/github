{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description": "Hybrid Network (SGW + NLB)",

  "Parameters" : {
    "TagPrj": {
      "Description": "Project's Name",
      "Type": "String",
      "Default": "HybridNetwork"
    },
    "TagTeam": {
      "Description": "Team's Name",
      "Type": "String" ,
      "Default": "Innovation Public Cloud"
    },
    "TagUser": {
      "Description": "Teammember's Name",
      "Type": "String" ,
      "Default": "a.cagnacl"
    },
    "KeyName" : {
      "Description" : "EC2 Key Pair for SSH Access",
      "Type": "String" ,
      "Default" : "kp-hybridnetwork-bst"
    },
    "DesiredCapacity": {
        "Type": "Number",
        "Default": "1",
        "Description": "Number of instances to launch in your ECS cluster."
    },
    "MinSize": {
        "Type": "Number",
        "Default": "1",
        "Description": "Maximum number of instances that can be launched in your ECS cluster."
    },
    "MaxSize": {
        "Type": "Number",
        "Default": "2",
        "Description": "Maximum number of instances that can be launched in your ECS cluster."
    },
    "InstanceType": {
      "Description": "EC2 instance type",
      "Type": "String",
      "Default": "t2.micro",
      "AllowedValues": ["t2.micro","t2.small","t2.medium","t2.large"]
    }
  },

  "Mappings": {
      "HN" :{
        "Context":{
          "NP":"np","AC":"ac","PR":"pr"
        },
        "Env": {
          "PRD":"prd",
          "AC1":"ac1","AC2":"ac2","AC3":"ac3",
          "ST1":"st1","ST2":"st2","ST3":"st3",
          "DV1":"dv1","DV2":"dv2","DV3":"dv3",
          "WS1":"ws1","WS2":"ws2","WS3":"ws3"
        }
      },
      "RegionMap" : {
        "eu-west-1" : {
          "RCode" : "WE1","rcode" : "we1",
          "a":"eu-west-1a" , "b":"eu-west-1b", "c":"eu-west-1c",
          "ECSami": "ami-880d64f1",
          "SGWami": "ami-19095960"
        }
      }
  },

  "Conditions": {
    "EnvNP": { "Fn::Equals" : [ { "Fn::Select": ["2", {"Fn::Split" : [ "-" , {"Ref": "AWS::StackName"} ] } ] } , "NP" ] },
    "EnvAC": { "Fn::Equals" : [ { "Fn::Select": ["2", {"Fn::Split" : [ "-" , {"Ref": "AWS::StackName"} ] } ] } , "AC" ] },
    "EnvPR": { "Fn::Equals" : [ { "Fn::Select": ["2", {"Fn::Split" : [ "-" , {"Ref": "AWS::StackName"} ] } ] } , "PR" ] }
  },

  "Resources" : {

    "ASGSSHGTW": {
        "Type": "AWS::AutoScaling::AutoScalingGroup",
        "Properties": {

            "LaunchConfigurationName": { "Ref": "LCSSHGTW" },
            "MinSize": { "Ref": "MinSize" },
            "MaxSize": { "Ref": "MaxSize" },
            "DesiredCapacity": { "Ref": "DesiredCapacity" },
            "TargetGroupARNs": [ { "Ref" : "TGSSHGTW" } ],
            "VPCZoneIdentifier": [
              { "Fn::ImportValue": { "Fn::Join": ["-", [ "CFS","HN",{"Fn::Select": ["2",{"Fn::Split":["-",{"Ref":"AWS::StackName"} ] } ] },
                { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "RCode"] },"COMMON","001","OutSNETPUB1A" ] ] } },
              { "Fn::ImportValue": { "Fn::Join": ["-", [ "CFS","HN",{"Fn::Select": ["2",{"Fn::Split":["-",{"Ref":"AWS::StackName"} ] } ] },
                { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "RCode"] },"COMMON","001","OutSNETPUB1B" ] ] } }
            ]
        },
        "UpdatePolicy": {
            "AutoScalingReplacingUpdate": { "WillReplace": "true" }
        }
    },

    "LCSSHGTW": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId" : { "Fn::FindInMap" : [ "RegionMap",{ "Ref" : "AWS::Region" },"SGWami" ]},
        "SecurityGroups": [
          { "Fn::ImportValue": { "Fn::Join": ["-", [ "CFS","HN",{"Fn::Select": ["2",{"Fn::Split":["-",{"Ref":"AWS::StackName"} ] } ] },
            { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "RCode"] },"COMMON","001","OutSGsgw" ] ] } }
        ],
        "InstanceType": { "Ref": "InstanceType" },
        "KeyName": { "Ref": "KeyName" },
        "UserData": { "Fn::Base64" : { "Fn::Join" : ["", [
          "#!/bin/bash -ex\n",
          "yum update -y"
        ]]}}
      }
    },

    "NLBSSHGTW": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "Name": { "Fn::Join": ["-", [ "NLB","HN",{"Fn::Select": ["2",{"Fn::Split":["-",{"Ref":"AWS::StackName"} ] } ] },
          { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "RCode"] },"001" ] ] },
        "Scheme": "internet-facing",
        "Subnets": [
          { "Fn::ImportValue": { "Fn::Join": ["-", [ "CFS","HN",{"Fn::Select": ["2",{"Fn::Split":["-",{"Ref":"AWS::StackName"} ] } ] },
            { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "RCode"] },"COMMON","001","OutSNETPUB1A" ] ] } },
          { "Fn::ImportValue": { "Fn::Join": ["-", [ "CFS","HN",{"Fn::Select": ["2",{"Fn::Split":["-",{"Ref":"AWS::StackName"} ] } ] },
            { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "RCode"] },"COMMON","001","OutSNETPUB1B" ] ] } }
        ],
        "Type": "network",
        "IpAddressType": "ipv4"
      }
    },

    "TGSSHGTW" : {
      "Type" : "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties" : {
        "Name": { "Fn::Join": ["-", [ "TG","HN",{"Fn::Select": ["2",{"Fn::Split":["-",{"Ref":"AWS::StackName"} ] } ] },
          { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "RCode"] },"SSHGTW","001" ] ] },
        "Port": 22,
        "Protocol": "TCP",
        "TargetGroupAttributes": [{
          "Key": "deregistration_delay.timeout_seconds",
          "Value": "20"
        }],
        "VpcId": { "Fn::ImportValue": { "Fn::Join": ["-", [ "CFS","HN",{"Fn::Select": ["2",{"Fn::Split":["-",{"Ref":"AWS::StackName"} ] } ] },
          { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "RCode"] },"COMMON","001","OutVPC" ] ] } }
      }
    },

    "LSNRSSHGTW": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [{
          "Type": "forward",
          "TargetGroupArn": { "Ref": "TGSSHGTW" }
        }],
        "LoadBalancerArn": { "Ref": "NLBSSHGTW" },
        "Port": "22",
        "Protocol": "TCP"
      }
    },

    "RSGdnsNLB": {
      "Type": "AWS::Route53::RecordSetGroup",
      "DependsOn" : "NLBSSHGTW",
      "Properties": {
        "HostedZoneId": "Z3G3CT0NE6EV9P",
        "RecordSets": [
          {
            "Name": "hn-np-sgw.bpost.cloud.",
            "Type": "A",
            "AliasTarget": {
              "HostedZoneId": "Z2IFOLAFXWLO4F",
              "DNSName": { "Fn::Join": ["", [ { "Fn::GetAtt": ["NLBSSHGTW","DNSName"] } ] ] }
            }
          }
        ]
      }
    }

  },


  "Outputs" : {
    "OutStackName": {
      "Value": { "Ref" : "AWS::StackName" } ,
      "Export": { "Name" : {"Fn::Sub": "${AWS::StackName}-StackName" }}
    },
    "OutNLBASG" : {
      "Description": "NetworkLoadBalancer address",
      "Value": { "Fn::Join": ["", [ { "Fn::GetAtt": ["NLBSSHGTW","DNSName"] } ] ] },
      "Export" : { "Name" : {"Fn::Sub": "${AWS::StackName}-OutNLBASG" }}
    }
  }
}
